/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package harmonic;

/**
 *
 * @author itarsi
 */
public class HarmonicBalancer extends javax.swing.JDialog {

    /**
     * Creates new form HarmonicBalancer
     */
    public HarmonicBalancer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        order_voltage_list=new javax.swing.JTextField[4];
        order_voltage_list[0]=order1_field;
        order_voltage_list[1]=order2_field;
        order_voltage_list[2]=order3_field;
        order_voltage_list[3]=order4_field;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        harmonic_settings = new javax.swing.JPanel();
        order_label = new javax.swing.JLabel();
        order_field = new javax.swing.JTextField();
        fundamental_freq_text = new javax.swing.JTextField();
        fundamental_freq = new javax.swing.JLabel();
        order_settings = new javax.swing.JPanel();
        first_order = new javax.swing.JLabel();
        second_order = new javax.swing.JLabel();
        third_order = new javax.swing.JLabel();
        fourth_order = new javax.swing.JLabel();
        order1_field = new javax.swing.JTextField();
        order2_field = new javax.swing.JTextField();
        order3_field = new javax.swing.JTextField();
        order4_field = new javax.swing.JTextField();
        warning_label = new javax.swing.JLabel();
        ok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Harmonic Balance Solver");
        setPreferredSize(new java.awt.Dimension(410, 310));

        harmonic_settings.setBorder(javax.swing.BorderFactory.createTitledBorder("Harmonic Settings"));
        harmonic_settings.setLayout(null);

        order_label.setText("Order of the Simulation");
        harmonic_settings.add(order_label);
        order_label.setBounds(10, 40, 332, 39);
        harmonic_settings.add(order_field);
        order_field.setBounds(220, 30, 110, 45);
        harmonic_settings.add(fundamental_freq_text);
        fundamental_freq_text.setBounds(220, 60, 110, 45);

        fundamental_freq.setText("Fundamental Frequency(Hz)");
        harmonic_settings.add(fundamental_freq);
        fundamental_freq.setBounds(10, 70, 200, 39);

        order_settings.setBorder(javax.swing.BorderFactory.createTitledBorder("Order Settings"));
        order_settings.setLayout(null);

        first_order.setText("First Order(V)");
        order_settings.add(first_order);
        first_order.setBounds(10, 40, 196, 39);

        second_order.setText("Second Order(V)");
        order_settings.add(second_order);
        second_order.setBounds(10, 80, 238, 39);

        third_order.setText("Third Order(V)");
        order_settings.add(third_order);
        third_order.setBounds(10, 120, 209, 39);

        fourth_order.setText("Fourth Order(V)");
        order_settings.add(fourth_order);
        fourth_order.setBounds(10, 160, 228, 39);
        order_settings.add(order1_field);
        order1_field.setBounds(160, 30, 100, 45);
        order_settings.add(order2_field);
        order2_field.setBounds(160, 70, 100, 45);
        order_settings.add(order3_field);
        order3_field.setBounds(160, 110, 100, 45);
        order_settings.add(order4_field);
        order4_field.setBounds(160, 150, 100, 45);

        warning_label.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        warning_label.setForeground(new java.awt.Color(199, 11, 11));
        order_settings.add(warning_label);
        warning_label.setBounds(270, 30, 120, 50);

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        order_settings.add(ok);
        ok.setBounds(290, 130, 70, 47);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(harmonic_settings, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
            .addComponent(order_settings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(harmonic_settings, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(order_settings, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        String order_number=order_field.getText();
        if(order_number.equals(""))
        {
            warning_label.setText("Please enter a value!");
        }
        else
        {
            int order =Integer.parseInt(order_number);
            order_voltages=new double[order];
            for(int i=0;i<order;i++)
            {
                try{
                    order_voltages[i]=Double.parseDouble(order_voltage_list[i].getText());
                }catch(NullPointerException e)
                {
                    warning_label.setText("Please enter a value for field "+(i+1));
                }
            }
            this.dispose();
        }
    }//GEN-LAST:event_okActionPerformed
    
    public double[] getOrderVoltages()
    {
        return order_voltages;
    }
    public double getFundamentalFrequency()

    {
        return Double.parseDouble(this.fundamental_freq_text.getText());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel first_order;
    private javax.swing.JLabel fourth_order;
    private javax.swing.JLabel fundamental_freq;
    private javax.swing.JTextField fundamental_freq_text;
    private javax.swing.JPanel harmonic_settings;
    private javax.swing.JButton ok;
    private javax.swing.JTextField order1_field;
    private javax.swing.JTextField order2_field;
    private javax.swing.JTextField order3_field;
    private javax.swing.JTextField order4_field;
    private javax.swing.JTextField order_field;
    private javax.swing.JLabel order_label;
    private javax.swing.JPanel order_settings;
    private javax.swing.JLabel second_order;
    private javax.swing.JLabel third_order;
    private javax.swing.JLabel warning_label;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JTextField order_voltage_list[];
    private double order_voltages[];
}
